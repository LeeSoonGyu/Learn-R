setwd('C:/rwork')
write.csv(Chem97, "Chem97.csv", quote = F)
Chem97 <- read.csv("Chem97.csv", header = T, stringsAsFactors = F)
Chem97
######12.밀도그래프#####
ggplot(Chem97) +#esquisser
aes(
x = gcsescore,
fill = gender,
colour = gender,
group = gender
) +
geom_density(adjust = 1L) +
scale_fill_brewer(palette = "Set1", direction = -1) +
scale_color_brewer(palette = "Set1", direction = -1) +
theme_bw() +
facet_wrap(vars(score))
hist(iris$Sepal.Width, xlab = "iris$Sepall.Width",col = 'gray',freq = F)#graphics
lines(density(iris$Sepal.Width), col = 'red',lwd = 5)
######12.밀도그래프#####
ggplot(Chem97) +#esquisser
aes(
x = gcsescore,
fill = gender,
colour = gender,
group = gender
) +
geom_density(adjust = 1L) +
scale_fill_brewer(palette = "Set1", direction = -1) +
scale_color_brewer(palette = "Set1", direction = -1) +
theme_bw() +
facet_wrap(vars(score))
# 데이터 가져오기
getwd()
setwd('E:/BigDate/R programing/dataset3/dataset3')
university <- read.csv('university.csv', header = T)
university
hist(iris$Sepal.Width, xlab = "iris$Sepall.Width",col = 'gray',freq = F)#graphics
lines(density(iris$Sepal.Width), col = 'red',lwd = 5)
iris_setosa = iris3[,,1]
iris_versicolor = iris3[,,2]
iris_virginica = iris3[,,3]
par(mfrow = c(2,2))
plot(iris3, main = 'iris3 산전도 분포도')
plot(iris_setosa, pch = 20, col = 'red', main = 'setosa 산점도')
plot(iris_versicolor, pch = 20, col = 'skyblue', main = 'versicolor 산점도')
plot(iris_virginica, pch = 20, col = 'green', main = 'virginica 산점도')
# 3) 꽃의 종별로 산점도 그래프를 그린다.
# 3D 그래프
library(scatterplot3d)
iris_setosa = iris3[,,1]
iris_versicolor = iris3[,,2]
iris_virginica = iris3[,,3]
d3 <- scatterplot3d(iris3[,1,], iris3[,2,], iris3[,3,], type = 'n',
main = '꽃의 종별 3D 산점도',
xlab = colnames(iris3)[1], ylab = colnames(iris3)[2],
zlab = colnames(iris3)[3])
d3$points3d(iris_setosa[,1], iris_setosa[,2], iris_setosa[,3], bg = 'red', pch = 21)
d3$points3d(iris_versicolor[,1], iris_versicolor[,2], iris_versicolor[,3], bg = 'skyblue', pch = 23)
d3$points3d(iris_virginica[,1], iris_virginica[,2], iris_virginica[,3], bg = 'green', pch = 25)
iris_setosa = iris3[,,1]
iris_versicolor = iris3[,,2]
iris_virginica = iris3[,,3]
par(mfrow = c(2,2))
plot(iris3, main = 'iris3 산전도 분포도')
plot(iris_setosa, pch = 20, col = 'red', main = 'setosa 산점도')
plot(iris_versicolor, pch = 20, col = 'skyblue', main = 'versicolor 산점도')
plot(iris_virginica, pch = 20, col = 'green', main = 'virginica 산점도')
# R에 포함된 기본 함수 차트 그리기 #
chart_data <- c(305,450,320,460,330,480,380,520)
names(chart_data) <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
barplot(chart_data, ylim = c(0,600),
ylab = "매출액(단위: 만원)",
xlab = "년도별 분기 현황",
col = rainbow(8),
main = "1)2018년도 vs 2019년도 매출현황 비교")
barplot(chart_data, ylim = c(0,600),
ylab = "매출액(단위: 만원)",
xlab = "년도별 분기 현황",
col = rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
# R에 포함된 기본 함수 차트 그리기 #
chart_data <- c(305,450,320,460,330,480,380,520)
names(chart_data) <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
barplot(chart_data, ylim = c(0,600),
ylab = "매출액(단위: 만원)",
xlab = "년도별 분기 현황",
col = rainbow(8),
main = "2018년도 vs 2019년도 매출현황 비교")
######2)가로 막대 차트 #####
barplot(chart_data, xlim = c(0,600),horiz = T,
ylab = "매출액(단위: 만원)",
xlab = "년도별 분기 현황",
col = rainbow(8),space = 1, cex.names = 0.8,
main = "2)2018년도 vs 2019년도 매출현황 비교"
)
######3)누적 막대 차트 #####
data("VADeaths")
barplot(VADeaths,beside =F, col =rainbow(5))
title(main = "3)미국 버지니아주 하위계층 사망비율",font.main = 4)
legend(3.8,200, c("50-54","55-59","60-64","65-69","70-74"),cex =0.8,fill=rainbow(5))
title(main = "미국 버지니아주 하위계층 사망비율",font.main = 4)
######4)점 차트 #####
par(mfrow = c(1,1))
X11();dotchart(chart_data, color = c("blue","red"),
lcolor = "black", pch = 6,
labels = names(chart_data),
xlab = "매출액",
main = "4)분기별 판매현황 : 점차트 시각화",
cex = 1.2)
######4)점 차트 #####
par(mfrow = c(1,1))
X11();dotchart(chart_data, color = c("blue","red"),
lcolor = "black", pch = 6,
labels = names(chart_data),
xlab = "매출액",
main = "분기별 판매현황 : 점차트 시각화",
cex = 1.2)
######4)점 차트 #####
par(mfrow = c(1,1))
X11();dotchart(chart_data, color = c("blue","red"),
lcolor = "black", pch = 6,
labels = names(chart_data),
xlab = "매출액",
main = "분기별 판매현황 : 점차트 시각화",
cex = 1.2)
######5)원형 차트#####
par(mfrow = c(1,1))
X11();pie(chart_data, labels = names(chart_data),col = rainbow(8),
cex =1.2, lty =2,border = "red")
title("2018~2019년도 분기별 매출현황")
X11();pie(chart_data, labels = names(chart_data),col = rainbow(8),
cex =1.2, lty =2,border = "red")
title("2018~2019년도 분기별 매출현황")
######6)상자 그래프 #####
X11();boxplot(VADeaths, range = 0,notch = T)
abline(h = 37, lty =3 , col = "red")
X11();boxplot(VADeaths, range = 0,notch = T)
abline(h = 37, lty =3 , col = "red")
title("6) 상자 그래프 시각화 ")
######7)히스토그램#####
data(iris)
X11();hist(iris$Sepal.Width, xlab = "iris$Sepal.Width",col = "green", freq = T,
main = "7) iris 꽃받침 너비 histogram : 빈도수", xlim = c(2.0,4.5))
X11();hist(iris$Sepal.Width, xlab = "iris$Sepal.Width",col = "magenta", freq = F,
main = "iris 꽃받침 너비 histogram : 확률 밀도", xlim = c(2.0,4.5))
X11();hist(iris$Sepal.Width, xlab = "iris$Sepal.Width",col = "green", freq = T,
main = "iris 꽃받침 너비 histogram : 빈도수", xlim = c(2.0,4.5))
X11();hist(iris$Sepal.Width, xlab = "iris$Sepal.Width",col = "magenta", freq = F,
main = "iris 꽃받침 너비 histogram : 확률 밀도", xlim = c(2.0,4.5))
lines(density(iris$Sepal.Width),col = "red")
######8)산점도 그래프#####
data("airquality")
X11();plot(Ozone~Wind ,  data = airquality, col = Month,pch = "♥",axes=T, ann =T)#범례 추가해야함
data("airquality")
X11();plot(Ozone~Wind ,  data = airquality, col = Month,pch = "♥",axes=T, ann =T)#범례 추가해야함
title("8) 산점도 그래프 시각화 ")
legend(18,120,c("5월","6월","7월","8월","9월"),cex = 0.8)
######9)중첩 자료 시각화#####
data(galton)
# 사례연구 6 이순규
library(ggplot2); library(lattice); library(latticeExtra)
library(esquisse); library(plotly); library(rgl)
library(plotrix); library(dplyr); library(dygraphs)
library(maps); library(ggmap); library(reshape2)
library(gridExtra); library(scatterplot3d); library(UsingR)
library(stringr); library(mlmRev)
######9)중첩 자료 시각화#####
data(galton)
galtonData <- as.data.frame(table(galton$child, galton$parent))
head(galtonData)
names(galtonData) = c("child", "parent", "freq")
head(galtonData)
parent <- as.numeric(galtonData$parent)
child <- as.numeric(galtonData$child)
par(mfrow = c(1, 1))
X11();plot(parent, child,
pch = 21, col = "blue", bg = "green",
cex = 0.2 * galtonData$freq,
xlab = "parent", ylab = "child")
######10)변수간의 비교 시각화#####
pairs(iris[1:4], pch= 21, bg=c("red","green","blue")[unclass(iris$Species)])
legend("top", col = c("red","green","blue"), legend = levels(iris$Species), pch = 20,
xpd = NA,ncol = 3, bty = "n", inset = -0.20, pt.cex = 1.5)
######11)3차원 산점도 #####
#꽃의 종류별 분류
iris_setosa = iris[iris$Species == 'setosa',]
iris_versicolor = iris[iris$Species == 'versicolor',]
iris_virginica = iris[iris$Species == 'virginica',]
d3 <- scatterplot3d(iris$Petal.Length, #박스 생성
iris$Sepal.Length,
iris$Sepal.Width,
type = 'n')#밑변,오른쪽 변,왼쪽 변 순, type
d3$points3d(iris_setosa$Petal.Length,  # 각 3개의 점 생성
iris_setosa$Sepal.Length,
iris_setosa$Sepal.Width,
bg = 'orange',pch = 21)
d3$points3d(iris_versicolor$Petal.Length,
iris_versicolor$Sepal.Length,
iris_versicolor$Sepal.Width,
bg = 'blue',pch = 23)
d3$points3d(iris_virginica$Petal.Length,
iris_virginica$Sepal.Length,
iris_virginica$Sepal.Width,
bg = 'gray',pch = 25)
######12) 밀도 그래프#####
data("Chem97")
Chem97
X11();densityplot(~gcsescore | factor(score), data = Chem97,
groups = gender, plot.points = T, auto.key = T,
main = "12)성별에 따른 gcsescore 점수 밀도 그래프")
######1.막대 차트(세로)#####
value <- c(305,450,320,460,330,480,380,520)
period <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
chart_data2 <- data.frame( Period = period,Value = value)
str(chart_data2)
#lattice()
X11();barchart(Value~Period, data = chart_data2,col = rainbow(8))
#esquisse()
ggplot(chart_data2) +
aes(x = Period, fill = Period, weight = Value) +
geom_bar() +
scale_fill_hue(direction = 1) +
theme_minimal() +
ylim(0L, 600L)
#plot_ly
plot_ly(data = chart_data2,
x = period,
y = value,
type = 'bar',
color = period)
plot3d(period,value, col = rainbow(8))
chart_data3<-data.frame(
period2 <- c(2018.1, 2018.2, 2018.3,2018.4,2019.1,2019.2,2019.3,2019.4),
value2 <- c(305,320,330,380,450,460,480,520)
)
dyBarChart(dygraph(chart_data3))
######2.막대 차트(가로)#####
#lattice
X11();barchart(Period~Value, data = chart_data2,col = rainbow(8),horiz=T)#horiz 옵션
ggplot(chart_data2) +#coord_flip()옵션으로 가로 모형 구현
aes(x = Period, fill = Period, weight = Value) +
geom_bar() +
scale_fill_hue(direction = 1) +
coord_flip() +
theme_minimal() +
ylim(0L, 600L)
#plot_ly
plot_ly(data = chart_data2,
x = value,
y = period,
type = 'bar',
color = period,
horizon = T)
data("diamonds")
X11();ggplot(diamonds, aes(x = clarity, fill = cut)) +#ggplot2()
geom_bar()
######4.점 차트#####
dotplot(period~value,chart_data2)#lattice
dotplot()
ggplot(chart_data2, aes(value,period))+#ggplot2
geom_point()+theme_linedraw()
chart_data2 %>% plot_ly()%>%add_markers(x =value, y =period)#plotly (add_markers)
######5.원형 차트#####
ggplot(chart_data2, aes(x='',y=Value,fill=Period))+#ggplot2 사용
geom_bar(stat = "identity")+
coord_polar('y')+
geom_text(aes(label=Value),position = position_stack((vjust = 0.5)))
pie3D(chart_data2$Value,labels = paste(chart_data2$Period,chart_data2$Value),
explode = 0.3,labelcex = 0.8,shade =0.5,radius = 2.5)#plotrix
######6.상자 그래프#####
VADeaths3<- as.data.frame.table(VADeaths)
VADeaths3
X11();ggplot(data = VADeaths3, aes(x=Var2,y=Freq))+#ggplot2 사용
geom_boxplot(fill=c('orange','yellow','blue','purple'),color='black',width=0.3)+
geom_abline(intercept = 37, slope = 0 , color = 'red',linetype = 'dashed')
bwplot(Freq~Var2,data = VADeaths3)#lattice
plot_ly(y = VADeaths3$Freq,x = VADeaths3$Var2, type = 'box',quartilemethod = "exclusive")#plotly
######7.히스토그램#####
X11();histogram(~Sepal.Width, data=iris,#lattice()
xlab ='Sepal의 너비',ylab ='빈도수')
X11();ggplot(iris) +#ggplot()
aes(x = Sepal.Width) +
geom_histogram(bins = 10L, fill = "#112446",color = "black")
iris_sw <- iris$Sepal.Width#plotly()
iris_sw
plot_ly(x = iris_sw, type = 'histogram')
######8.산점도#####
data("airquality")
X11();xyplot(Ozone ~ Wind , group = Month,data = airquality,pch = "♣",
col = c('orange','red','blue','purple','black'),auto.key  = T)#lattice
X11();ggplot(airquality)+#ggplot
geom_point(aes(x=Wind, y=Ozone,color = factor(Month)))
######9.중첩자료 시각화#####
par(mfrow = c(1, 1))
X11();xyplot(child~parent,cex = 0.2 * galtonData$freq, col = 'black',fill = 'red',pch = 21)#lattice
X11();ggplot(galtonData) +#ggplot
aes(x = parent, y = child, colour = freq) +
geom_point(mapping = aes(size = 0.5*freq)) +
scale_color_gradient() +
theme_minimal()
# esquisser()
p1<-ggplot(iris) +
aes(x = Sepal.Length, y = Sepal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal() +
facet_wrap(vars(Species))
p2<-ggplot(iris) +
aes(x = Sepal.Length, y = Petal.Length, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p3<-ggplot(iris) +
aes(x = Sepal.Length, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p4<-ggplot(iris) +
aes(x = Sepal.Width, y = Petal.Length, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p5<-ggplot(iris) +
aes(x = Sepal.Width, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p6<-ggplot(iris) +
aes(x = Petal.Length, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3) #ggplot의 여러 시각화를 동시에 한화면에 출력하려면
######11.3차원 산점도 그래프#####
plot3d(iris[1:150,1:3])#rgl
with(iris, plot3d(iris[1:150, 1:3], type = "s", col = as.integer(iris$Species)))
cloud(Sepal.Length ~ Sepal.Width * Petal.Length,data=iris,group = Species, #lattice
zlim = rev(range(iris$Sepal.Length)),auto.key = T)
plot_ly(iris, x = iris$Sepal.Length, y = iris$Sepal.Width, z = iris$Petal.Length,#plotly
color = iris$Species, colors = c('#BF382A', '#0C4B8E')) %>%add_markers() %>%
layout(scene = list(xaxis = list(title = 'Sepal.Length'), #x축 제목설정
yaxis = list(title = 'Sepal.Width'),  #y축 제목설정
zaxis = list(title = 'Petal.Length'))) #z축 제목설정
######12.밀도그래프#####
ggplot(Chem97) +#esquisser
aes(
x = gcsescore,
fill = gender,
colour = gender,
group = gender
) +
geom_density(adjust = 1L) +
scale_fill_brewer(palette = "Set1", direction = -1) +
scale_color_brewer(palette = "Set1", direction = -1) +
theme_bw() +
facet_wrap(vars(score))
hist(iris$Sepal.Width, xlab = "iris$Sepall.Width",col = 'gray',freq = F)#graphics
lines(density(iris$Sepal.Width), col = 'red',lwd = 5)
university
# 데이터 가져오기
getwd()
setwd('E:/BigDate/R programing/dataset3/dataset3')
university <- read.csv('university.csv', header = T)
university
######9.중첩자료 시각화#####
par(mfrow = c(1, 1))
X11();xyplot(child~parent,cex = 0.2 * galtonData$freq, col = 'black',fill = 'red',pch = 21)#lattice
X11();xyplot(child~parent,cex = 0.1 * galtonData$freq, col = 'black',fill = 'red',pch = 21)#lattice
X11();xyplot(child~parent,cex = 0.1 * galtonData$freq, col = 'black',fill = 'red',pch = 21, alpha = 0.5)#lattice
X11();xyplot(child~parent,cex = 0.2 * galtonData$freq, col = 'black',fill = 'red',pch = 21, alpha = 0.5)#lattice
X11();xyplot(child~parent,cex = 0.2 * galtonData$freq, col = 'white',fill = 'red',pch = 21, alpha = 0.5)#lattice
library(plotly)
library(dplyr)
rm(list =ls())
chart_data <- c(305, 450, 320, 460, 330, 480, 380, 520)
names <- c("2018 1분기", "2019 1분기",
"2018 2분기", "2019 2분기", "2018 3분기", "2019 3분기",
"2018 4분기", "2019 4분기")
data <- data.frame(names,chart_data)
#### 막대 차트 ####
# 세로차트
fig <- plot_ly(y = chart_data,name = "2018년도 vs 2019년도 매출현황 비교",type = "bar")
# 가로차트
fig <- plot_ly(x = chart_data,name = "2018년도 vs 2019년도 매출현황 비교",type = "bar")
fig
#### 막대 차트 ####
# 세로차트
fig <- plot_ly(y = chart_data,name = "2018년도 vs 2019년도 매출현황 비교",type = "bar")
fig
# 가로차트
fig <- plot_ly(x = chart_data,name = "2018년도 vs 2019년도 매출현황 비교",type = "bar")
fig
# 누적차트
#  데이터 설정
A <- c("1분기","2분기","3분기","4분기")
S <- c(305,320,330,380)
B <- c(450,460,480,520)
data <- data.frame(A,S,B)
# plot_ly
fig <- plot_ly(data, x = ~A, y = ~S, type = 'bar', name = '2018')
fig <- fig %>% add_trace(y = ~B, name = '2019')
fig <- fig %>% layout(yaxis = list(title = '누적'), barmode = 'stack')
fig
#### 점차트 ####
chart_data <- c(305, 450, 320, 460, 330, 480, 380, 520)
names <- c("2018 1분기", "2019 1분기",
"2018 2분기", "2019 2분기", "2018 3분기", "2019 3분기",
"2018 4분기", "2019 4분기")
df <- data.frame(chart_data)
df
# 4.점 차트 #
dotplot(period~value,chart_data2)
data("diamonds")
# 4.점 차트 #
dotplot(period~value,chart_data2)
# 1.막대 차트(세로) #
value <- c(305,450,320,460,330,480,380,520)
period <- c("2018 1분기","2019 1분기",
"2018 2분기","2019 2분기",
"2018 3분기","2019 3분기",
"2018 4분기","2019 4분기")
chart_data2 <- data.frame( Period = period,Value = value)
str(chart_data2)
#lattice()
X11();barchart(Value~Period, data = chart_data2,col = rainbow(8))
#esquisse()
ggplot(chart_data2) +
aes(x = Period, fill = Period, weight = Value) +
geom_bar() +
scale_fill_hue(direction = 1) +
theme_minimal() +
ylim(0L, 600L)
#plot_ly
plot_ly(data = chart_data2,
x = period,
y = value,
type = 'bar',
color = period)
plot3d(period,value, col = rainbow(8))
# 4.점 차트 #
dotplot(period~value,chart_data2)
dotplot()
ggplot(chart_data2, aes(value,period))+
geom_point()+theme_linedraw()
chart_data2 %>% plot_ly() %>% add_markers(x =value, y =period)
# 10)변수간의 비교 시각화 #
pairs(iris[1:4], pch= 21, bg=c("red","green","blue")[unclass(iris$Species)])
legend("top", col = c("red","green","blue"), legend = levels(iris$Species), pch = 20,
xpd = NA,ncol = 3, bty = "n", inset = -0.20, pt.cex = 1.5)
# 10.변수간의 비교 시각화 #
data("iris")
X11();splom(~iris[1:4] |Species, data= iris)
p1<-ggplot(iris) +
aes(x = Sepal.Length, y = Sepal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal() +
facet_wrap(vars(Species))
p2<-ggplot(iris) +
aes(x = Sepal.Length, y = Petal.Length, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p3<-ggplot(iris) +
aes(x = Sepal.Length, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p4<-ggplot(iris) +
aes(x = Sepal.Width, y = Petal.Length, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p5<-ggplot(iris) +
aes(x = Sepal.Width, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
p6<-ggplot(iris) +
aes(x = Petal.Length, y = Petal.Width, colour = Species) +
geom_point(shape = "circle", size = 1.5) +
scale_color_hue(direction = 1) +
theme_minimal()
grid.arrange(p1,p2,p3,p4,p5,p6, ncol=3)
# 11.3차원 산점도 그래프 #
plot3d(iris[1:150,1:3])
with(iris, plot3d(iris[1:150, 1:3], type = "s", col = as.integer(iris$Species)))
# 11.3차원 산점도 그래프 #
plot3d(iris[1:150,1:3])
cloud(Sepal.Length ~ Sepal.Width * Petal.Length,data=iris,group = Species,
zlim = rev(range(iris$Sepal.Length)),auto.key = T)
plot_ly(iris, x = iris$Sepal.Length, y = iris$Sepal.Width, z = iris$Petal.Length,
color = iris$Species, colors = c('#BF382A', '#0C4B8E')) %>% add_markers() %>%
layout(scene = list(xaxis = list(title = 'Sepal.Length'),
yaxis = list(title = 'Sepal.Width'),
zaxis = list(title = 'Petal.Length')))
cloud(Sepal.Length ~ Sepal.Width * Petal.Length,data=iris,group = Species,
zlim = rev(range(iris$Sepal.Length)),auto.key = T)
# 11.3차원 산점도 그래프 #
plot3d(iris[1:150,1:3])
with(iris, plot3d(iris[1:150, 1:3], type = "s", col = as.integer(iris$Species)))
with(iris, plot3d(iris[1:150, 1:3], type = "s", col = as.integer(iris$Species)))
