subject <- c("국어", "영어", "수학")
score <- c(95, 85, 70)
score1 <- c(80, 95, 80)
score2 <- c(75, 60, 95)
test <- data.frame("과목" = subject, "윤봉길" = score, "안중근" = score1, "이봉창" = score2)
test
apply(test[2], 2, mean)
apply(test[3], 2, mean)
data("Bug_Metrics_Software")
#2.
library(RSADBE)
data("Bug_Metrics_Software")
data
head(Bug_Metrics_Software)
Bug_Metrics_Software[,,1]
rowSums(Bug_Metrics_Software)
colMeans(Bug_Metrics_Software)
summary(Bug_Metrics_Software)
rowSums(Bug_Metrics_Software[,,2])
colMeans(Bug_Metrics_Software[,,2])
summary(Bug_Metrics_Software[,,2])
c(1, 2, 3, 4) + c(1, 2, 3, 4, 5, 6)
f <- c(1, 2, 3, 4) + c(1, 2, 3, 4, 5, 6)
f
a <- 5
a <- 10
a[2]
a
a[1]
install.packages("corrplot")
library(corrplot)
install.packages("lattice")
library(lattice)
mcor2=cor(mtcars$gear,
mtcars$carb)
mcor2
xyplot(gear~carb,data=mtcars)
plot(mtcars$gear,
mtcars$carb)
abline(lm(mtcars$gear
~mtcars$carb))
mcor=cor(mtcars)
mcor
round(mcor,2)
corrplot(mcor)
plot(mtcars)
plot(mtcars)
library(corrplot)
library(lattice)
mcor2=cor(mtcars$gear,
mtcars$carb)
mcor2
xyplot(gear~carb,data=mtcars)
plot(mtcars$gear,
mtcars$carb)
mcor=cor(mtcars)
mcor
round(mcor,2)
corrplot(mcor)
plot(mtcars)
mcor2=cor(mtcars$gear,
mtcars$carb)
mcor2
xyplot(gear~carb,data=mtcars)
plot(mtcars$gear,
mtcars$carb)
abline(lm(mtcars$gear
~mtcars$carb))
mcor=cor(mtcars)
mcor
round(mcor,2)
corrplot(mcor)
plot(mtcars)
install.packages("ggplot2")
library(ggplot2)
qplot(gear, carb, data=mtcars)
cor(mtcars$wt, mtcars$mpg)
qplot(wt, mpg, data=mtcars,
color=factor(carb))
# 1. CleanData 파일 데이터에서 나이(age3)와 직위(position)간의 관련성 단계별 분석
# 1-1 데이터셋 가져오기
getwd()
setwd('D:/BigDate/R programing/dataset3/dataset3')
cleandata <- read.csv('cleanData.csv', header = T)
cleandata
# 1-2 코딩변경(변수리코딩)
x <- cleandata$position # 행 직위변수 이용
y <- cleandata$age3 # 열 나이 리코딩 변수 이용
# 1-3 산점도를 이용한 변수간의 관련성 보기
plot(formula = y ~ x, data = cleandata)
windows()
plot(formula = y ~ x, data = cleandata)
result.data <- lm(formula = y ~ x, data = cleandata)
result.data
abline(result.data, col = 'red')
summary(result.data)
# 2. response.csv파일 데이터 작업 유형에 따른 응답 정도에 차이가 있는가를 단계별 검정.
# 2-1 파일 가져오기
getwd()
setwd('D:/BigDate/R programing/dataset2/dataset2')
cleandata <- read.csv('cleanData.csv', header = T)
cleandata
# 1-2 코딩변경(변수리코딩)
x <- cleandata$position # 행 직위변수 이용
y <- cleandata$age3 # 열 나이 리코딩 변수 이용
windows()
plot(formula = y ~ x, data = cleandata)
result.data <- lm(formula = y ~ x, data = cleandata)
result.data
abline(result.data, col = 'red')
summary(result.data)
responsedata <- read.csv('response.csv', header = T)
responsedata
# 2-2 코딩 변경
responsedata$job[responsedata$job == 1] <- 학생
# 2-2 코딩 변경
responsedata$job[responsedata$job == 1] <- '학생'
responsedata
responsedata$job[responsedata$job == 2] <- '직장인'
responsedata$job[responsedata$job == 3] <- '주부'
responsedata$response[responsedata$response == 1] <- '무응답'
responsedata$response[responsedata$response == 2] <- '낮음'
responsedata$response[responsedata$response == 3] <- '높음'
responsedata
library(gmodels)
CrossTable(x = responsedata$job, y = responsedata$response)
# 3. mtcars 데이터에서 엔진(vs) 종속변수, 연비(mpg)와 변속기종료(am)을 독립변수
# 로지스틱 회귀분석을 실시.
# 3-1 데이터 가져오기
getwd()
setwd()
# 3. mtcars 데이터에서 엔진(vs) 종속변수, 연비(mpg)와 변속기종료(am)을 독립변수
# 로지스틱 회귀분석을 실시.
# 3-1 데이터 가져오기
data('mtcars')
mtcars
leesoongyu <- mtcars
library(car)
library(lmtest)
library(ROCR)
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
leesoongyu_model <- glm(vs ~ mpg + am, data = leesoongyu, family = 'binomial', na.action = na.omit)
leesoongyu_model
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(leesoongyu_model)
# 3-4 로지스틱 회귀식
Y = -12.7051 + 0.6809 - 3.0073
Y
# 3-4 로지스틱 회귀식
Y = 1 / (1 - 12.7051 + 0.6809 - 3.0073)
Y
cleandata <- read.csv('cleanData.csv', header = T)
cleandata
# 1-2 코딩변경(변수리코딩)
x <- cleandata$position # 행 직위변수 이용
y <- cleandata$age3 # 열 나이 리코딩 변수 이용
windows()
plot(formula = y ~ x, data = cleandata)
plot(formula = y ~ x, data = cleandata)
result.data <- lm(formula = y ~ x, data = cleandata)
result.data
abline(result.data, col = 'red')
summary(result.data)
responsedata <- read.csv('response.csv', header = T)
responsedata
# 2-2 코딩 변경
responsedata$job[responsedata$job == 1] <- '학생'
responsedata$job[responsedata$job == 2] <- '직장인'
responsedata$job[responsedata$job == 3] <- '주부'
responsedata$response[responsedata$response == 1] <- '무응답'
responsedata$response[responsedata$response == 2] <- '낮음'
responsedata$response[responsedata$response == 3] <- '높음'
CrossTable(x = responsedata$job, y = responsedata$response)
cleandata
# 1-2 코딩변경(변수리코딩)
x <- cleandata$position # 행 직위변수 이용
y <- cleandata$age3 # 열 나이 리코딩 변수 이용
plot(formula = y ~ x, data = cleandata)
result.data <- lm(formula = y ~ x, data = cleandata)
result.data
abline(result.data, col = 'red')
summary(result.data)
lee <- mtcars$vs
soon <- mtcars$mpg
gyu <- mtcars$am
mtcars_df <- data.frame(lee, soon, gyu)
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
leesoongyu_model <- glm(lee ~ soon + gyu, data = mtcars_df, family = 'binomial', na.action = na.omit)
leesoongyu_model
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(leesoongyu_model)
# 3-4 로지스틱 회귀식
Y = -12.7051 + 0.6809*soon - 3.0073*gyu
Y
# 3-4 로지스틱 회귀식
Y = -12.7051 + 0.6809 - 3.0073
Y
# 3-4 로지스틱 회귀식
Y = 1 / (1-12.7051 + 0.6809 - 3.0073)
Y
# 3-6 mpg가 30이고 자동변속기(am=0)일때 승산(odds)?
odds = -12.7051 + 0.6809*30 - 3.0073*0
odds
data('mtcars')
leesoongyu <- mtcars
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
mtcars_glm <- glm(vs ~ mpg + am, data = leesoongyu, family = 'binomial')
mtcars_glm
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(mtcars_glm)
# 3-4 로지스틱 회귀식
Y = -12.7051 + 0.6809*mpg - 3.0073*am
Y
# 3-4 로지스틱 회귀식
soon <- leesoongyu$mpg
gyu <- leesoongyu$am
Y = -12.7051 + 0.6809*soon - 3.0073*gyu
Y
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
mtcars_glm <- glm(vs ~ mpg + am, data = leesoongyu, family = 'binomial')
mtcars_glm
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(mtcars_glm)
responsedata <- read.csv('response.csv', header = T)
responsedata
# 2-2 코딩 변경
responsedata$job[responsedata$job == 1] <- '학생'
responsedata$job[responsedata$job == 2] <- '직장인'
responsedata$job[responsedata$job == 3] <- '주부'
responsedata$response[responsedata$response == 1] <- '무응답'
responsedata$response[responsedata$response == 2] <- '낮음'
responsedata$response[responsedata$response == 3] <- '높음'
responsedata
CrossTable(x = responsedata$job, y = responsedata$response)
data(mtcars)
Data3 <- mtcars %>% select(vs, mpg, am)
#평가문항 6. 로지스틱 회귀 분석 문제
#6-1)데이터 가져오기
library(dplyr)
data(mtcars)
Data3 <- mtcars %>% select(vs, mpg, am)
head(Data3)
#6-2)로지스틱 회귀분석 실행하고 회귀모델 확인
idx <- sample(1:nrow(Data3),nrow(Data3)*0.7)
train <- Data3[idx,]
test <- Data3[-idx,]
car_model <- glm(vs~.,data = train, family = 'binomial')
car_model
#6-3) 로지스틱 회귀모델 요약정보 확인
summary(car_model) #절편은 -29.30 mpg는 1.55 , am은 -3.78의 기울기임을 확인.
#6-4) 로지스틱 회귀식
y = Data3$vs
x1 = Data3$mpg
x2 = Data3$am
y = -29.30 + (x1 * 1.55) + (x2 * -3.78)
y
data('mtcars')
leesoongyu <- mtcars %>% select(vs, mpg, am)
leesoongyu
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
idx <- sample(1:nrow(leesoongyu),nrow(leesoongyu)*0.7)
train <- leesoongyu[idx,]
test <- leesoongyu[-idx,]
mtcars_glm <- glm(vs ~ ., data = train, family = 'binomial')
mtcars_glm
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(mtcars_glm)
# 3-4 로지스틱 회귀식
soon <- leesoongyu$mpg
gyu <- leesoongyu$am
Y = -9.9054 + 0.5131*soon - 2.3682*gyu
Y
# 3-6 mpg가 30이고 자동변속기(am=0)일때 승산(odds)?
odds = -9.9054 + 0.5131*30 - 2.3682*0
odds
# 3. mtcars 데이터에서 엔진(vs) 종속변수, 연비(mpg)와 변속기종류(am)을 독립변수
# 로지스틱 회귀분석을 실시.
# 3-1 데이터 가져오기
data('mtcars')
leesoongyu <- mtcars
leesoongyu
# 3-2 로지스틱 회귀분석 후 회귀모델 확인
mtcars_glm <- glm(vs ~ mpg + am, data = leesoongyu, family = 'binomial')
mtcars_glm
# 3-3 로지스틱 회귀모델 요약정보 확인
summary(mtcars_glm)
# 3-4 로지스틱 회귀식
soon <- leesoongyu$mpg
gyu <- leesoongyu$am
# 3-6 mpg가 30이고 자동변속기(am=0)일때 승산(odds)?
odds = -12.7051 + 0.6809*30 - 3.0073*0
odds
## 문제2 ######################################################################
# 제공된 cleanData.csv 파일 내 데이터에서 나이(age3)와 직위(position)간의
# 관련성을 단계별로 분석하시오.
# 1) 파일 가져오기(파일 내 데이터 저장)
clean <- read.csv('cleanData.csv',header=T)
# 2) 코딩 변경(변수 리코딩)
#       x <- data$position # 행 - 직위변수 이용
#       y <- data$age3 # 열 - 나이 리코딩 변수 이용
names(clean)
x <- clean$position
y <- clean$age3
# 3) 산점도를 이용한 변수간의 관련성 보기(plot(x,y)함수 이용)
plot(x,y)
library(dplyr)
clean %>% select(5,9) %>% pairs(panel=panel.smooth, main='변수 관련성')
cleandata <- read.csv('cleanData.csv', header = T)
cleandata
# 1-2 코딩변경(변수리코딩)
x <- cleandata$position # 행 직위변수 이용
y <- cleandata$age3 # 열 나이 리코딩 변수 이용
windows()
plot(formula = y ~ x, data = cleandata)
install.packages('doBy')
library(doBy)
iris_train <- sampleBy(~Species, frac = 0.7, data = iris)
dim(iris_train)
table(iris_train$Species)
iris_train
